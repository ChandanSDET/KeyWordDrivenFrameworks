									#####################################################
									#                                                   #
									#         Contains xpaths for UI elements.          #
									#                                                   #
									#####################################################
									
--------------------Left_Panel----------------------------------------------------
HomePage = //a[contains(text(),'LBCS')]
Stages = (//a[contains(text(),'Stages')])[1]
ListStage = //a[contains(text(),'List Stages')]
SearchServicehost = //a[contains(text(),'Search Servicehosts')]
SearchApplicationIPs = //a[contains(text(),'Search Application IPs')]
Netscalers = (//a[contains(text(),'Netscalers')])[1]
ListNetscalers = //a[contains(text(),'List Netscalers')]
SearchVIPs = //a[contains(text(),'Search VIPs')]
VIPPoolsNetscalers = (//a[contains(text(),'Netscalers')])[1]
RIPPools = (//a[contains(text(),'RIP Pools')])[1]
ServiceConfigurations = (//a[contains(text(),'Service Configurations')])[1]
Deployments = (//a[contains(text(),'Deployments')])[1]
DeleteEntities = (//a[contains(text(),'Delete Entities')])[1]
TestConfiguration =(//a[contains(text(),'Test Configuration')])[1]
-------------------BUTTONS----------------------------------------------------------
FlipSwitch = (//label)[1]

UPDATEStage = //button[@id='updateStageBtn']
UPDATENetscaler = //button[@id='updateNetscalerBtn']
UPDATEServiceconfig = //button[@id='updateServiceConfigBtn']

CREATEStage = //button[@id='createStageBtn']
CREATENetscaler = //button[@id='createNetscalerBtn']
CREATEServiceconfig = //button[@id='createserviceconfigsBtn']

CANCEL = //a[contains(text(),'Cancel')]
CANCLEButton = //div/button[contains(text(),'Cancel') and @id = 'cancelBtn']
NO = //button[text()='No']														
YES = //button[text()='Yes']	
BACK = (//a/i)[8]
EDIT = (//a/i)[9]
Delete = //button[contains(text(),'Delete')]
SubmitDelete = //a[contains(text(),'Delete') and @type='submit']
Verify = //button[contains(text(),'Verify')]
PREVIEW = //a[contains(text(),'Preview')]
VALIDATE = //button[contains(text(),'Validate')]
-------------------Destroy_Messages-------------------------------------------------
DeleteMessage = (//h2)[2]
ModifictionWarnning = (//h2)[2]
WarnningMessage = //p[contains(text(),'Are you sure you want to delete?')]
-------------------Alert_Messages---------------------------------------------------
AlertMessage = //span[@data-growl='message']
Alert.StageCreated = //span[contains(text(),'Stage deleted successfully!')]

Deployment.Deleted = //p[contains(text(),'Deployment deleted.')]
DuplicateWarnning = //div[contains(text(),'already exists')]
Warnning = //div[contains(text(),'Error!') or contains(text(),'Error') ]
Warnning.NoSuchResource = //p[contains(text(),'No such resource')]
Warnning.CanNotRemove = //p[contains(text(),'Cannot remove')]
ErrorOccurred = //p[contains(text(),'The following errors occurred')]
IPAddressIsInvalid = //p[contains(text(),'IP Address is invalid.')]
StageRequired = //div[contains(text(),'Error!')]
--------------------Searching_Input_Fields------------------------------------------
NAME = //input[@name='name']
DESCRIPTION = //input[@name='description']
NUMSERVICEHOST = //input[@name='serviceHostCount']
IPADDRESS = //input[@name='ipAddress']
DNSNAME = //input[@name='dnsName']
INTERFACEID = //input[@name ='interfaceId' ]
STAGES = //input[@name='stages']
STAGE = //input[@name='stageName']
SERVICES = //input[@name='services']
SERVICENAME = //input[@name='serviceName']

SearchLabel.NAME = //span[contains(text(),'Name')]
SearchLabel.DESCRIPTION = //span[contains(text(),'Description')]
SearchLabel.IPADDRESS = //span[contains(text(),'Ip address')]
SearchLabel.DNSNAME = //span[contains(text(),'Dns name')]
SearchLabel.SERVICENAME = //span[contains(text(),'Servicename')]
SearchLabel.NETSCALER = //span[contains(text(),'Netscaler')]
SearchLabel.STAGE = //span[contains(text(),'Stage')]
SearchLabel.STAGES = //span[contains(text(),'Stages')]
SearchLabel.SERVICECONFIG = //span[contains(text(),'Serviceconfig')]
SearchLabel.ARCHVERSION = //span[contains(text(),'Arch Version')]
SearchLabel.CONFIGVERSION = //span[contains(text(),'Config Version')]
SearchLabel.PROPERTIESVERSION = //span[contains(text(),'Properties Version')]
SearchLabel.STATUS = //span[contains(text(),'Status')]
--------------------Common----------------------------------------------------------
PageHeader = (//h2)[1]
PH.STAGES = //h2[contains(text(),'Stage')]
PH.STAGESNEW = //h2[contains(text(),'Stages : New')]
PH.STAGESSHOW = //h2[contains(text(),'Stages : Show')]
PH.STAGESEDIT = //h2[contains(text(),'Stages : Edit')]
PH.NETSCALERS = //h2[contains(text(),'Netscalers')]
PH.NETSCALERSNEW = //h2[contains(text(),'Netscalers : New')]
PH.NETSCALERSSHOW = //h2[contains(text(),'Netscalers : Show')]
PH.NETSCALERSEDIT = //h2[contains(text(),'Netscalers : Edit')]
PH.SERVICECONFIGS = //h2[contains(text(),'Serviceconfigs')]
PH.SERVICECONFIGSNEW = //h2[contains(text(),'Serviceconfigs : New')]
PH.SERVICECONFIGSSHOW = //h2[contains(text(),'Serviceconfigs : Show')]
PH.SERVICECONFIGSEDIT = //h2[contains(text(),'Serviceconfigs : Edit')]
PH.DEPLOYMENTS = //h2[contains(text(),'Deployments')]
PH.DEPLOYMENTSNEW = //h2[contains(text(),'Deployments : New')]
PH.DEPLOYMENTSSHOW = //h2[contains(text(),'Deployments : Show')]
PH.DEPLOYMENTSEDIT = //h2[contains(text(),'Deployments : Edit')]
PH.DEPLOYMENTSPREVIEW = //h2[contains(text(),'Deployments : Preview')]
PH.DEPLOYMENTSCHECK = //h2[contains(text(),'Deployments : Check')]
PH.NETSCALERENTITY = //h2[contains(text(),'Netscaler Entities')]

PageFooter = //span[contains(text(),'Copyright © 2016 Citrix Systems, Inc.')]
IPMatch = //td[contains(text(),'50.50.50.20')]
AddAStage = //a[contains(text(),'Add a stage')]
SelectStage = (//select)[1]
Remove = //td[contains(text(),'AutomationStage')]/following::td[1]/div/a[contains(text(),'Remove')]
Removeblt = //td[contains(text(),'blt')]/following::td[1]/div/a
---------------------Labels---------------------------------------------------------

Label.Name = //label[contains(text(),'Name')]
Label.Description = //label[contains(text(),'Description')]
Label.ServicehostIPS = //label[contains(text(),'Servicehost ips(Sample formats')]
Label.Ipaddress = //label[contains(text(),'Ipaddress')]
Label.DNSName = //label[contains(text(),'DNS Name')]
Label.Stages = //label[contains(text(),'Stages')]
Label.Stage = //label[text()='Stage']
Label.YMLFileLocation = //label[contains(text(),'Configuration YML file Stash location')]
Label.ServiceName = //label[text()='Service Name']
Label.NetScaler = //label[text()='NetScaler']
Label.ArchitectureVersion = //Label[contains(text(),'Architecture Version')]
Label.ConfigVersion = //label[contains(text(),'Config Version')]
Label.PropertiesVersion = //Label[contains(text(),'Properties Version')]
Label.Username = //label[contains(text(),'Username')]
Label.Password = //label[contains(text(),'Password')]
Label.EntityType = //label[contains(text(),'Entity type')]
Label.EntityName = //label[contains(text(),'Entity names')]
Label.Netscaler = //label[contains(text(),'Netscaler')]
--------------------Definition_Term -------------------------------------------------

DT.Name = //dt[contains(text(),'Name')]
DT.Description = //dt[contains(text(),'Description')]
DT.Netscalers = //dt[contains(text(),'Netscalers')]
DT.Netscaler = //dt[contains(text(),'Netscaler')]
DT.Servicehosts = //dt[contains(text(),'Servicehosts')]
DT.Ipaddress = //dt[contains(text(),'Ipaddress')]
DT.Dnsname = //dt[contains(text(),'Dnsname')]
DT.Stage = //dt[contains(text(),'Stage')]
DT.Serviceips = //dt[contains(text(),'Serviceips')]
DT.VIPs = //dt[contains(text(),'VIPs')]
DT.ServiceName = (//dt)[1]
DT.StageName = (//dt)[2]
DT.NetScaler = (//dt)[3]
DT.Location = //dt[contains(text(),'Location')]
DT.ArchitectureVersion = //dt[contains(text(),'Architecture Version')]
DT.ConfigVersion = //dt[contains(text(),'Config Version')]
DT.PropertiesVersion = //dt[contains(text(),'Properties Version')]
DT.Service = //dt[contains(text(),'Service')]
DT.Netscalervips = //dt[contains(text(),'Netscalervips')]
DT.Serviceips = //dt[contains(text(),'Serviceips')]
DT.User = //dt[contains(text(),'User')]
---------------------Table_Header---------------------------------------------------

TH.Ipaddress =  //th[contains(text(),'Ipaddres')]
TH.Dnsname =  //th[contains(text(),'Dnsname')]
TH.NumServiceips =  //th[contains(text(),'Num Serviceips')]
TH.ServiceName = //th[contains(text(),'Service Name')]
TH.Vlan = //th[contains(text(),'Vlan')]
TH.Stage =  //th[contains(text(),'Stage')]
TH.Action = //th[contains(text(),'Action')]
TH.Location =  //th[contains(text(),'Location')]
TH.Domain =  //th[contains(text(),'Domain')]
TH.DNSNAME = //th[contains(text(),'DNS NAME')]
TH.Internal = //th[contains(text(),'Internal')]
TH.External = //th[contains(text(),'External')]
------------------------------------------------------------------------------------
###################
//	Login page 	 //
###################
LoginPageTitle = //legend[contains(text(),'Please login to LBCS')]
UserName = //input[@name = 'username']
Password = //input[@name = 'password']
LoginButton = //button[contains(text(),'Login')]
LogOutButton = (//i)[1]

UserNameRequired = //p[contains(text(),'Username is required.')]
PasswordRequired = //p[contains(text(),'Password is required.')]
###################
//	List Stages 	 //
###################
#### ListStage, YES, NO, WarnningMessage , DeleteMessage, NAME, DESCRIPTION, NUMSERVICEHOST, DuplicateWarnning, DuplicateWarnning

AutomationStage = //td[contains(text(),'AutomationStage')]
Stage.Menu = //td[contains(text(),'AutomationStage')]/parent::tr/td[3]/ul/li/a/i
Stage.Show = (//td[contains(text(),'AutomationStage')]/parent::tr/td[3]/ul/li/ul/li/a)[1]
Stage.Edit = (//td[contains(text(),'AutomationStage')]/parent::tr/td[3]/ul/li/ul/li/a)[2]
StageName = //td[contains(text(),'AutomationStage')]
Stage.Destroy = (//td[contains(text(),'AutomationStage')]/parent::tr/td[3]/ul/li/ul/li/a)[3]
StageNew = //a[@href='#/stages/add']

Stage.MenuBlt = //td[contains(text(),'blt')]/parent::tr/td[4]/ul/li/a/i
Stage.DestroyBlt = (//td[contains(text(),'blt')]/parent::tr/td[4]/ul/li/ul/li/a)[3]

########################## 
//	New Stage Creation	//
########################## 
#### NAME, DESCRIPTION, CANCEL, CREATE, DuplicateWarnning
Stage.ShowServicehostIPS = //input[@id='serviceHostIps']		
Stage.NameRequired =  //p[contains(text(),'Stage name is required.')]
Stage.DescriptionRequired =  //p[contains(text(),'Description is required.')]
Stage.NameLength = //p[contains(text(),'Stage name cannot be longer than 25 characters.')]
Stage.DescriptionLength = //p[contains(text(),'Description cannot be longer than 150 characters.')]
							
###################
//	 Show Stage	 //
###################
#### BACK, EDIT, DeleteMessage, WarnningMessage, YES, NO, IPMatch
Stage.ShowName = (//dd)[1]																		
Stage.ShowDescription = (//dd)[2]																	
Stage.ShowNetscalers = (//dd)[3]																	

Stage.ShowIPMatchNew = //td[contains(text(),'40.40.40.10')]
Stag.ShowServiceHostMenu = (//tr/td[text()='50.50.50.20'])[1]/following-sibling::td/ul/li/a
Stage.ShowServiceHostShow = (//tr/td[text()='50.50.50.20'])[1]/following-sibling::td/ul/li/ul/li/a[text()='Show']
Stage.ShowServiceHostEdit = (//tr/td[text()='50.50.50.20'])[1]/following-sibling::td/ul/li/ul/li/a[text()='Edit']
Stage.ShowServiceHostDestroy = (//tr/td[text()='50.50.50.20'])[1]/following-sibling::td/ul/li/ul/li/a[text()='Destroy']

###################### 
//	  Edit Stage	//
###################### 
#### Name, Description, BACK, UPDATE, CANCEL, AddRadioButton, DeleteRadioButton
Stage.EditServicehostIPS = //input[@name='serviceHostIps']												
Stage.IPRequired = //p[contains(text(),'Servicehost IPs is required.')]													

															###################### 
															//	ServiceHost		//
															###################### 
###  SearchServicehost, STAGE, IPADDRESS
ServiceHost.Count = //td[contains(text(),'AutomationStage')]/following-sibling::td[2]
Servicehost.ShowStage = //td[contains(text(),'50.50.50.20')]/following-sibling::td[contains(text(),'AutomationStage')]/following-sibling::td/div/a

######################### 
//	ServiceHost	Show   //
######################### 
### EDIT, BACK, IPMatch
ServiceHost.Ipaddress = (//dd)[1]	
ServiceHost.DnsName = (//dd)[2]
ServiceHost.ShowStage = (//dd)[3]

######################### 
//	ServiceHost	Edit   //
######################### 
#### UPDATE, BACK
ServiceHost.EditIpaddress = //input[@id='ipaddress']
ServiceHost.EditDnsName = //input[@id='dnsname']
ServiceHost.EditStage = //label[text()='AutomationStage']

															###########################
															//	   Netscalers		 //
															###########################
############################
// List Netscalers //
############################
#### ListNetscalers, DeleteMessage, WarnningMessage, YES, NO,
NetscalerNew = //a[@href='#/netscalers/add']
Netscalers.IPMatch = //td[contains(text(),'7.230.220.222')]
Netscalers.IPADDRESS = //input[@name = 'ipAddress']
Netscalers.DnsName = //input[@name = 'dnsName']
Netscaler.Menu =  //td[contains(text(),'7.230.220.222')]/parent::tr/td[3]/ul/li/a/i	
Netscaler.MenuShow =  //td[contains(text(),'7.230.220.222')]/parent::tr/td[3]/ul/li/ul/li/a[text()='Show']
Netscaler.MenuEdit =  //td[contains(text(),'7.230.220.222')]/parent::tr/td[3]/ul/li/ul/li/a[text()='Edit']
Netscaler.MenuDestroy =  //td[contains(text(),'7.230.220.222')]/parent::tr/td[3]/ul/li/ul/li/a[text()='Destroy']

Netscaler.MenuTemp =  //td[contains(text(),'7.230.220.200')]/parent::tr/td[3]/ul/li/a/i	
Netscaler.MenuEditTemp =  //td[contains(text(),'7.230.220.200')]/parent::tr/td[3]/ul/li/ul/li/a[text()='Edit']
Netscaler.MenuDestroyTemp =  //td[contains(text(),'7.230.220.200')]/parent::tr/td[3]/ul/li/ul/li/a[text()='Destroy']

Netscaler.MenuOrig =  //td[contains(text(),'10.230.220.201')]/parent::tr/td[3]/ul/li/a/i
Netscaler.MenuShowOrig =  //td[contains(text(),'10.230.220.201')]/parent::tr/td[3]/ul/li/ul/li/a[text()='Show']
Netscaler.MenuEditOrig =  //td[contains(text(),'10.230.220.201')]/parent::tr/td[3]/ul/li/ul/li/a[text()='Edit']
Netscaler.MenuDestroyOrig =  //td[contains(text(),'10.230.220.201')]/parent::tr/td[3]/ul/li/ul/li/a[text()='Destroy']

########################### 
//	   Netscaler NEW	 //
###########################
##### NetscalerNew, IPADDRESS, DNSNAME, CREATE, CANCEL, BACK, DuplicateWarnning, AddAStage, SelectStage, Remove, PageHeader
Netscaler.DnsNameLengthError = //p[contains(text(),'DNS Name cannot be longer than 253 characters.')]
Netscaler.IPAddressRequireError = //p[contains(text(),'IP Address is required.')]
Netscaler.DnsNameRequireError = //p[contains(text(),'DNS Name is required.')]
 
########################### 
//	   Netscaler Show	 //
###########################
#### BACK, CANCEL, EDIT, PageHeader
Netscaler.ShowIpaddress = //dd[contains(text(),'7.230.220.222')]
Netscaler.ShowDnsname = //dd[contains(text(),'nslbcs2.qai.expertcity.in')]
Netscaler.ShowStage = //dd[contains(text(),'AutomationStage')]

Netscaler.ShowIpaddressOrig = //dd[contains(text(),'10.230.220.201')]
Netscaler.ShowDnsnameOrig = //dd[contains(text(),'nslbcs2.qai.expertcity.com')]
#########################
//   Netscaler Edit	   //
#########################	
#### BACK, UPDATE, CANCEL, AddAStage, Remove, SelectAutomationStage, PageHeader, Netscalers.IPADDRESS
Netscaler.EditRemoveStage = //td[contains(text(),'AutomationStage')]/following-sibling::td/div/a

#########################F
//   SERVICECONFIGS	   //
#########################
#### ServiceConfigurations,INTERFACEID, STAGES, NAME, YES, NO, DeleteMessage, WarnningMessage
ServiceConfigNew = //a[@href='#/serviceconfigs/add']

ServiceConfig.Menu = //td[contains(text(),'Automation ServiceConfig')]/following-sibling::td/ul/li/a
ServiceConfig.Show = //td[contains(text(),'Automation ServiceConfig')]/following-sibling::td/ul/li/ul/li/a[text()='Show']
ServiceConfig.Edit = //td[contains(text(),'Automation ServiceConfig')]/following-sibling::td/ul/li/ul/li/a[text()='Edit']
ServiceConfig.Destroy = //td[contains(text(),'Automation ServiceConfig')]/following-sibling::td/ul/li/ul/li/a[text()='Destroy']
AutomationServiceConfig = //td[contains(text(),'Automation ServiceConfig')]

ServiceConfig.MenuNew = //td[contains(text(),'ServiceConfig New')]/following-sibling::td/ul/li/a
ServiceConfig.EditNew = //td[contains(text(),'ServiceConfig New')]/following-sibling::td/ul/li/ul/li/a[text()='Edit']

########################### 
//	   SERVICECONFIGS NEW	 //
###########################
##### NewServiceConfig, NAME, AddAStage, Remove, CREATE, CANCEL, BACK, SelectStage, DuplicateWarnning

ServiceConfig.Intfid =  //input[@name='intfid']
Serviceconfig.Description = //textarea
Serviceconfig.YMLFileLocation =  //input[@name='fileLocation']
Serviceconfig.SelectLocation = (//select)[2]
Serviceconfig.SelectDomain = (//select)[3]

Serviceconfig.NameRequired = //p[contains(text(),'Name is required.')]
Serviceconfig.ConfiglocationRequired =  //p[contains(text(),'Configlocation is required.')]  

Serviceconfig.NameLength = //p[contains(text(),'Name cannot be longer than 25 characters.')]
Serviceconfig.DescriptionLength = //p[contains(text(),'Description cannot be longer than 150 characters.')]
########################### 
//	   SERVICECONFIGS EDIT	 //
###########################
##### NAME, ServiceConfig.Intfid, Serviceconfig.Description, Serviceconfig.YMLFileLocation, AddAStage, Remove, UPDATE, CANCEL, BACK, 

########################### 
//	   SERVICECONFIGS SHOW	 //
###########################
##### BACK, EDIT
ServiceConfig.ShowName = (//dd)[1]																		
ServiceConfig.ShowDescription = (//dd)[2]
ServiceConfig.Location = (//dd)[3] 

############################
// DEPLOYMENTS //
############################
#### DeleteMessage, WarnningMessage, YES, NO, Deployments
DeploymentNew = //a[@href='#/deployments/add']
Deployment.SERVICENAME = //input[@name = 'serviceName']
Deployment.AutomationServiceConfig = //td[contains(text(),'Automation ServiceConfig')]
Deployment.ServiceConfigNew = //td[contains(text(),'ServiceConfig New')]

Deployment.Menu = //td[contains(text(),'Automation ServiceConfig')]/following-sibling::td/ul/li/a
Deployment.Show = //td[contains(text(),'Automation ServiceConfig')]/following-sibling::td/ul/li/ul/li/a[text()='Show']
Deployment.Edit = //td[contains(text(),'Automation ServiceConfig')]/following-sibling::td/ul/li/ul/li/a[text()='Edit']
Deployment.Verify = //td[contains(text(),'Automation ServiceConfig')]/following-sibling::td/ul/li/ul/li/a[text()='Verify']
Deployment.Destroy = //td[contains(text(),'Automation ServiceConfig')]/following-sibling::td/ul/li/ul/li/a[text()='Destroy']

############################
// DEPLOYMENT VERIFY //
############################ 
VerifyDeploymetTitle = //h4
Deployment.VerifyLoginDetail = //label[contains(text(),'Please enter login details for netscaler:')]
############################
// DEPLOYMENT DESTROY //
############################ 
#### Deployment.Username, Deployment.Password
DeleteDeploymetTitle = //h4
RemoveConfigurationFromDatabaseAndNetscalerCHECKBOX = (//label)[5]
RemoveConfigurationOnlyFromDatabaseCHECKBOX = (//label)[6]
Deployment.RemovalConfigurationChoiceIsRequired = //p[contains(text(),'Removal configuration choice is required.')]
############################
// DEPLOYMENT NEW //
############################
#### UserNameRequired, PasswordRequired
Deployment.ServiceName = (//select)[1]
Deployment.Stage = (//select)[2]
Deployment.Netscaler = (//select)[3]
Deployment.ArchitectureVersion = (//select)[4]
Deployment.ConfigVersion = (//select)[5]
Deployment.PropertiesVersion = (//select)[6]
Deployment.Username = //input[@name ='username']
Deployment.Password = //input[@name ='password']
NetscalerEntityConflictsCHECKBOX = (//label)[10]
DnsConflictsCHECKBOX = (//label)[11]
 
Deployment.ServiceconfigReq = //p[contains(text(),'Serviceconfig is required.')]
Deployment.ArchitectureversionReq = //p[contains(text(),'Architecture Version is required.')]
Deployment.PropertiesVersionReq = //p[contains(text(),'Properties Version is required.')]
Deployment.ConfigVersionReq = //p[contains(text(),'Config Version is required.')]

############################
// DEPLOYMENT EDIT //
############################
#### 
Deployment.EditArchitectureVersion = (//select)[1]
############################
// DEPLOYMENT SHOW //
############################
#### 
Deployment.ShowService = (//dd)[1]
Deployment.ShowStage = (//dd)[2]
Deployment.ShowArchitectureVersion = (//dd)[3]
Deployment.ShowConfigVersion = (//dd)[4]
Deployment.ShowPropertiesVersion = (//dd)[5]
Deployment.ShowNetscaler = (//dd)[6]
Deployment.ShowNetscalervips = (//dd)[7]
Deployment.ShowServiceips = (//dd)[8]
Deployment.ShowUser = (//dd)[9]
Deployment.ShowRefresh = //i[@class= 'zmdi zmdi-refresh']
Deployment.ShowDownload = //i[@class= 'zmdi zmdi-download']
############################
// DEPLOYMENT CHECK //
############################
#### 
Deployment.CheckEntity = //tr/th[1]
Deployment.CheckKey = //tr/th[2]
Deployment.CheckExpected = //tr/th[3]
Deployment.CheckActual = //tr/th[4]
Deployment.ShowMapsAndCommands = //a[contains(text(),'Show maps and commands')]

############################
// DEPLOYMENT PREVIEW //
############################
#### 
Deployment.PreviewService = (//dd)[1]
Deployment.PreviewStage = (//dd)[2]
Deployment.PreviewNetscaler = (//dd)[3]
Deployment.PreviewNetscalerVips = (//dd)[4]
Deployment.PreviewServiceIps = (//dd)[5]
Deployment.PreviewUser = (//dd)[6]

Deployment.NetscalerConflicts = (//h2)[2]
Deployment.DNSConflicts = (//h2)[3]
Deployment.CheckDNSNAME = (//tr/th[1])[2]
Deployment.CheckExpectedIP = (//tr/th[2])[2]
Deployment.CheckActualIPInternal = (//tr/th[3])[2]
Deployment.CheckActualIPExternal = (//tr/th[4])[2]
Deployment.PreviewNetworkMapRefresh = //i[@class = 'zmdi zmdi-refresh']
Deployment.PreviewNetworkMapDownload = //i[@class = 'zmdi zmdi-download']

Deployment.NetworkMapTitle = //h2[contains(text(),'Networkmap')]
Deployment.IPAddressToDNSMappingTitle = //h2[contains(text(),'IP Address to DNS Mapping')]
Deployment.SetUpCommandsTitle = //h2[contains(text(),'Set up commands')]
Deployment.TearDownommandsTitle = //h2[contains(text(),'Tear down commands')]
Deployment.AllGoodConfigureItNow = //a[contains(text(),'All good. Configure it now!')]

Deployment.DatabaseconfigRequired  = //p[contains(text(),'Datbase configuration is required.')]
Deployment.DNSconfigRequired = //p[contains(text(),'DNS configuration is required.')]

Deployment.ConfigureTheDatabaseAndNetscalerCHECKBOX = (//label)[3]
Deployment.ConfigureOnlyTheDatabaseCHECKBOX = (//label)[4]
Deployment.DoNotConfigureDNSCHECKBOX = (//label)[6]
Deployment.ConfigureDNSButDoNotReplaceExistingConflictsCHECKBOX = (//label)[7]
Deployment.ConfigureDNSReplacingExistingConflictsCHECKBOX = (//label)[8]

test1sltsvc-ro.lt.expertcity.comCHECKBOX = //label[contains(text(),'test1sltsvc-ro.lt.expertcity.com')]/following::td[1]/div/div/div/label/input
test1sltsvc.lt.expertcity.comCHECKBOX = //label[contains(text(),'test1sltsvc.lt.expertcity.com')]/following::td[1]/div/div/div/label/input
test2sltsvc-ro.lt.expertcity.comCHECKBOX = //label[contains(text(),'test2sltsvc-ro.lt.expertcity.com')]/following::td[1]/div/div/div/label/input
test2sltsvc.lt.expertcity.comCHECKBOX = //label[contains(text(),'test2sltsvc.lt.expertcity.com')]/following::td[1]/div/div/div/label/input
test1sltsvc1.lt.expertcity.comCHECKBOX = //label[contains(text(),'test1sltsvc1.lt.expertcity.com')]/following::td[1]/div/div/div/label/input
test1sltsvc2.lt.expertcity.comCHECKBOX = //label[contains(text(),'test1sltsvc2.lt.expertcity.com')]/following::td[1]/div/div/div/label/input
############################
// SEARCH SERVICE IPs //
############################
#### 
SERVICEIP.IPAddressFirst = //td[contains(text(),'55.230.45.201')]
SERVICEIP.DNSNameFirst = //td[contains(text(),'55.230.45.201')]/following::td[1]
SERVICEIP.IPAddressSecond = //td[contains(text(),'55.230.49.200')]
SERVICEIP.DNSNameSecond = //td[contains(text(),'55.230.49.200')]/following::td[1]
SERVICEIP.IPAddressThird = //td[contains(text(),'55.230.49.201')]
SERVICEIP.DNSNameThird = //td[contains(text(),'55.230.49.201')]/following::td[1]
############################
// SEARCH VIPs //
############################
#### 
VIPs.IPAddressFirst = //td[contains(text(),'55.230.44.201')]
VIPs.DNSNameFirst = //td[contains(text(),'55.230.44.201')]/following::td[1]
VIPs.IPAddressSecond = //td[contains(text(),'55.230.44.202')]
VIPs.DNSNameSecond = //td[contains(text(),'55.230.44.202')]/following::td[1]
VIPs.IPAddressThird = //td[contains(text(),'55.230.45.202')]
VIPs.DNSNameThird = //td[contains(text(),'55.230.45.202')]/following::td[1]
VIPs.ShowNetscaler = (//td[contains(text(),'Automation ServiceConfig')])[1]

NetscalerShow.IPAddressFirst = //td[contains(text(),'55.230.44.201')]
NetscalerShow.DNSNameFirst = //td[contains(text(),'55.230.44.201')]/following::td[1]
NetscalerShow.ServiceNameFirst = //td[contains(text(),'55.230.44.201')]/following::td[2]
NetscalerShow.IPAddressSecond = //td[contains(text(),'55.230.44.202')]
NetscalerShow.DNSNameSecond = //td[contains(text(),'55.230.44.202')]/following::td[1]
NetscalerShow.ServiceNameSecond = //td[contains(text(),'55.230.44.202')]/following::td[2]
NetscalerShow.IPAddressThird = //td[contains(text(),'55.230.45.202')]
NetscalerShow.DNSNameThird = //td[contains(text(),'55.230.45.202')]/following::td[1]
NetscalerShow.ServiceNameThird = //td[contains(text(),'55.230.45.202')]/following::td[2]
############################
// Delete Entities //
############################
#### DeleteMessage, WarnningMessage, YES, NO, DeleteEntities, SubmitDelete
Required.EntityName = //p[contains(text(),'Entity names are required.')]
Select.EntityType = //select[@id='entityType']
Select.Netscaler = //select[@name='netScaler']
DelEntity.EntityName = //input[@name='entityNames']

############################
// Test Configuration //
############################
ConfigFileRequired = //p[contains(text(),'Config file is required.')]
PropertyFileRequired = //p[contains(text(),'Properties file is required.')]
TestConfig.ConfigFile = //textarea[@name='configfile']
TestConfig.PropFile = //textarea[@name='propertiesfile']
